{"version":3,"sources":["components/FormCheckBox.js","components/FormInput.js","components/FormSelect.js","utils/cityList.js","components/Button.js","components/UpdateDate.js","components/Form.js","components/Wellcome.js","components/App.js","reportWebVitals.js","index.js"],"names":["FormCheckBox","value","onChange","formSelector","title","name","label","classSelector","about","className","onClick","htmlFor","id","FormInput","prompt","validationMessage","rest","FormSelect","selectList","e","map","item","index","city","firstCity","data","filter","population","sort","a","b","splice","popul","unshift","Button","type","children","ariaLabel","isEnabled","aria-label","arial-label","disabled","UpdateDate","date","Form","useState","cityList","setCity","check","setCheck","values","setValues","errors","setErrors","isValid","setIsvalid","currentDate","setCurrentDate","form","useRef","useEffect","match","password","passwordRepeat","current","checkValidity","handleChangeInput","target","textError","validity","valid","handleResetValue","toJSON","userEmail","console","log","JSON","stringify","ref","required","minLength","maxLength","autoComplete","pattern","preventDefault","Date","toLocaleString","day","year","month","slice","hour","minute","second","Wellcome","user","status","setStatus","isShow","setIsShow","buttonTitle","setButtonTitle","autoFocus","App","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baa055d6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FormCheckBox = ({\r\n  value,\r\n  onChange,\r\n  formSelector,\r\n  title,\r\n  name,\r\n  label,\r\n  classSelector,\r\n  about,\r\n}) => {\r\n  return (\r\n    <div className={`form__input-container ${formSelector}`}>\r\n      <label\r\n        onClick={onChange}\r\n        className={`form__label form__label_${classSelector}`}\r\n        htmlFor={label}\r\n      >\r\n        {title || ''}\r\n      </label>\r\n      <div className=\"form__item-wrapper\">\r\n        <div\r\n          id={label}\r\n          onClick={onChange}\r\n          name={name}\r\n          className={`form__item form__item_${classSelector} ${\r\n            value ? `form__item_${classSelector}_check` : ''\r\n          }`}\r\n        ></div>\r\n        <label\r\n          onClick={onChange}\r\n          className=\"form__label form__checkbox-about\"\r\n          htmlFor={label}\r\n        >\r\n          {about}\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormCheckBox;\r\n","import React from 'react';\r\n\r\nconst FormInput = ({\r\n  onChange,\r\n  value,\r\n  formSelector,\r\n  title,\r\n  label,\r\n  classSelector,\r\n  prompt,\r\n  validationMessage,\r\n  name,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div className={`form__input-container ${formSelector}`}>\r\n      <label\r\n        className={`form__label form__label_${classSelector}`}\r\n        htmlFor={label}\r\n      >\r\n        {title || 'Заголовок '}\r\n      </label>\r\n      <input\r\n        value={value || ''}\r\n        onChange={onChange}\r\n        id={label}\r\n        name={name}\r\n        className={`form__item form__item_${classSelector} form__item_${\r\n          validationMessage ? 'error' : ''\r\n        }`}\r\n        {...rest}\r\n      ></input>\r\n      <p className=\"form__item-prompt\">{prompt || ''}</p>\r\n      <span className=\"form__input-error form__input-error_visible\">\r\n        {validationMessage}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\n\r\nconst FormSelect = ({\r\n  value,\r\n  onChange,\r\n  formSelector,\r\n  title,\r\n  label,\r\n  classSelector,\r\n  selectList,\r\n  prompt,\r\n  ...rest\r\n}) => {\r\n  const handleChange = (e) => {\r\n    onChange(e);\r\n  };\r\n  return (\r\n    <div className={`form__input-container ${formSelector}`}>\r\n      <label className=\"form__label\" htmlFor={label}>\r\n        {title || 'Заголовок'}\r\n      </label>\r\n      <div className=\"form__select-wrapper\">\r\n        <select\r\n          value={value}\r\n          onChange={handleChange}\r\n          id={label}\r\n          className={`form__item ${classSelector}`}\r\n          {...rest}\r\n        >\r\n          {selectList ? (\r\n            selectList.map((item, index) => (\r\n              <option key={index} value={item.city}>\r\n                {item.city}\r\n              </option>\r\n            ))\r\n          ) : (\r\n            <option>{'значения'}</option>\r\n          )}\r\n        </select>\r\n      </div>\r\n      <p className=\"form__item-prompt\">{prompt || ''}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import data from '../data/cities.json';\r\n\r\nconst firstCity = data\r\n  .filter((city) => city.population > 50000)\r\n  .sort((a, b) => b.population - a.population)\r\n  .splice(0, 1);\r\n\r\nconst popul = data.filter(\r\n  (city) =>\r\n    (city.population > 50000) &\r\n    (city.population !== firstCity[0].population + '')\r\n);\r\npopul.unshift(firstCity[0]);\r\n\r\nexport default popul;\r\n","import React from 'react';\r\nimport './Button.scss';\r\nconst Button = ({\r\n  onClick,\r\n  type,\r\n  children,\r\n  classSelector,\r\n  ariaLabel,\r\n  isEnabled = true,\r\n}) => {\r\n  const handleClick = (e) => {\r\n    onClick(e);\r\n  };\r\n  return (\r\n    <button\r\n      onClick={handleClick}\r\n      type={type}\r\n      aria-label={children}\r\n      className={`button ${classSelector} ${\r\n        isEnabled ? '' : classSelector + '_disabled'\r\n      }`}\r\n      arial-label={ariaLabel}\r\n      disabled={!isEnabled}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst UpdateDate = ({ date }) => {\r\n  return (\r\n    <div className=\"form__save-info\">\r\n      <p className=\"form__save-date\">{`последние изменения ${date}`}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateDate;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport FormCheckBox from './FormCheckBox';\r\nimport FormInput from './FormInput';\r\nimport FormSelect from './FormSelect';\r\nimport cityList from '../utils/cityList';\r\nimport Button from './Button';\r\nimport './Form.scss';\r\nimport UpdateDate from './UpdateDate';\r\n\r\nconst Form = () => {\r\n  const [city, setCity] = useState(cityList[0].city);\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isValid, setIsvalid] = useState(false);\r\n\r\n  const [currentDate, setCurrentDate] = useState('21 октября 2015 в 04:29:00');\r\n\r\n  const form = useRef();\r\n\r\n  useEffect(() => {\r\n    const match = values.password === values.passwordRepeat;\r\n    setIsvalid(form.current.checkValidity() && match);\r\n  }, [values]);\r\n\r\n  const handleChangeInput = (e) => {\r\n    const target = e.target;\r\n    const { name, value } = target;\r\n    setValues({ ...values, [name]: value });\r\n    setErrors({\r\n      ...errors,\r\n      [name]: textError(value, name, target),\r\n    });\r\n  };\r\n\r\n  const textError = (value, name, target) => {\r\n    if (name === 'password' && !target.validity.valid)\r\n      return 'Используйте не менее 5 символов';\r\n    if (name === 'userEmail' && !target.validity.valid)\r\n      return 'Неверный E-mail';\r\n    if (name === 'passwordRepeat' && value !== values.password)\r\n      return 'Пароли не совпадают';\r\n  };\r\n\r\n  const handleChangeSelect = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n\r\n  const handleChangeCheck = () => {\r\n    setCheck(!check);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    let data =\r\n      new Date()\r\n        .toLocaleString('ru', {\r\n          day: 'numeric',\r\n          year: 'numeric',\r\n          month: 'long',\r\n        })\r\n        .slice(0, -3) +\r\n      ' в ' +\r\n      new Date().toLocaleString('ru', {\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric',\r\n      });\r\n    toJSON();\r\n    setCurrentDate(data);\r\n    handleResetValue();\r\n  };\r\n\r\n  const handleResetValue = () => {\r\n    setCity(cityList[0].city);\r\n    setCheck(false);\r\n    setValues({});\r\n  };\r\n\r\n  const toJSON = () => {\r\n    const { userEmail, password } = values;\r\n    console.log(\r\n      JSON.stringify({ city, password, userEmail, check }, null, '\\t')\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form ref={form} className=\"form form__container\">\r\n      <fieldset className=\"form__fieldset form__fieldset_ctrl_city\">\r\n        <FormSelect\r\n          value={city}\r\n          onChange={handleChangeSelect}\r\n          formSelector=\"form__input-container_ctrl_city\"\r\n          title=\"Ваш город\"\r\n          name=\"userCity\"\r\n          label=\"user-city\"\r\n          classSelector=\"form__item_city\"\r\n          selectList={cityList}\r\n          required\r\n        />\r\n      </fieldset>\r\n\r\n      <fieldset className=\"form__fieldset form__fieldset_ctrl_password\">\r\n        <FormInput\r\n          value={values.password}\r\n          onChange={handleChangeInput}\r\n          formSelector=\"form__input-container_ctrl_password\"\r\n          title=\"Пароль\"\r\n          name=\"password\"\r\n          label=\"password\"\r\n          classSelector=\"password\"\r\n          type=\"password\"\r\n          prompt=\"Ваш новый пароль должен содержать не менее 5 символов.\"\r\n          minLength=\"5\"\r\n          maxLength=\"40\"\r\n          autoComplete=\"off\"\r\n          validationMessage={errors.password}\r\n          required\r\n        />\r\n        <FormInput\r\n          value={values.passwordRepeat}\r\n          onChange={handleChangeInput}\r\n          formSelector=\"form__input-container_ctrl_password\"\r\n          title=\"Пароль еще раз\"\r\n          name=\"passwordRepeat\"\r\n          label=\"password-repeat\"\r\n          classSelector=\"password\"\r\n          type=\"password\"\r\n          prompt=\"Повторите пароль, пожалуйста, это обезопасит вас с нами на случай ошибки.\"\r\n          minLength=\"5\"\r\n          maxLength=\"40\"\r\n          validationMessage={errors.passwordRepeat}\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n      </fieldset>\r\n\r\n      <fieldset className=\"form__fieldset form__fieldset_ctrl_email\">\r\n        <FormInput\r\n          value={values.userEmail}\r\n          onChange={handleChangeInput}\r\n          formSelector=\"form__input-container_ctrl_email\"\r\n          title=\"Электронная почта\"\r\n          name=\"userEmail\"\r\n          label=\"user-email\"\r\n          classSelector=\"email\"\r\n          type=\"email\"\r\n          validationMessage={errors.userEmail}\r\n          prompt=\"Можно изменить адрес, указанный при регистрации.\"\r\n          pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\r\n          required\r\n        />\r\n\r\n        <FormCheckBox\r\n          value={check}\r\n          onChange={handleChangeCheck}\r\n          formSelector=\"form__input-container_ctrl_email-check\"\r\n          title=\"Я согласен\"\r\n          name=\"userAgreement\"\r\n          label=\"user-agreement\"\r\n          classSelector=\"agreement\"\r\n          about=\"принимать актуальную информацию на емейл\"\r\n        />\r\n      </fieldset>\r\n      <div className=\"form__submit\">\r\n        <Button\r\n          onClick={handleClick}\r\n          type={'submit'}\r\n          classSelector=\"form__button\"\r\n          ariaLabel=\"Изменить данные\"\r\n          isEnabled={isValid}\r\n        >\r\n          Изменить\r\n        </Button>\r\n        <UpdateDate date={currentDate} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport Button from './Button';\r\nimport './Wellcome.scss';\r\n\r\nconst Wellcome = ({ classSelector, user }) => {\r\n  const [status, setStatus] = useState('Прежде чем действовать, надо понять');\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [buttonTitle, setButtonTitle] = useState('Сменить статус');\r\n\r\n  const handleClick = (e) => {\r\n    setIsShow(!isShow);\r\n    setButtonTitle(isShow ? 'Изменить статус' : 'Сохранить');\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={`${classSelector} wellcome`}>\r\n      <h1 className=\"wellcome__user-title\">\r\n        Здравствуйте, <span className=\"wellcome__user-current\">{user}</span>\r\n      </h1>\r\n      <Button\r\n        onClick={handleClick}\r\n        disabled=\"false\"\r\n        classSelector=\"wellcome__button\"\r\n      >\r\n        {buttonTitle}\r\n      </Button>\r\n      <div className=\"wellcome__status\">\r\n        {isShow ? (\r\n          <input\r\n            autoFocus\r\n            maxLength=\"120\"\r\n            value={status}\r\n            onChange={handleChange}\r\n            name=\"status\"\r\n            type=\"text\"\r\n            className={`wellcome__status-input wellcome__status-text${\r\n              isShow ? '' : 'wellcome__status-input_display_hidden'\r\n            }`}\r\n          ></input>\r\n        ) : (\r\n          <p className=\"wellcome__status-text\"> {status || 'Ваш статус'}</p>\r\n        )}\r\n\r\n        <div className=\"wellcome__square-status\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wellcome;\r\n","import './App.scss';\r\nimport Form from './Form';\r\nimport Wellcome from './Wellcome';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <Wellcome\r\n          classSelector=\"header__wrapper\"\r\n          user={`Человек${'\\u00A0'}№${Math.floor(Math.random() * 1000)}`}\r\n        />\r\n      </header>\r\n      <main className=\"main\">\r\n        <Form />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}