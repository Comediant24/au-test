{"version":3,"sources":["components/FormCheckBox.js","components/FormInput.js","components/FormSelect.js","utils/cityList.js","components/Button.js","components/Form.js","components/Wellcome.js","components/App.js","reportWebVitals.js","index.js"],"names":["FormCheckBox","value","onChange","formSelector","title","name","label","classSelector","about","className","onClick","htmlFor","id","FormInput","prompt","validationMessage","rest","FormSelect","selectList","e","map","item","index","city","firstCity","data","filter","population","sort","a","b","splice","popul","unshift","Button","type","children","ariaLabel","isEnabled","aria-label","arial-label","disabled","Form","useState","cityList","setCity","check","setCheck","values","setValues","errors","setErrors","isValid","setIsvalid","form","useRef","useEffect","match","password","passwordRepeat","current","checkValidity","handleChangeInput","target","textError","validity","valid","handleResetValue","toJSON","userEmail","console","log","JSON","stringify","ref","required","minLength","maxLength","autoComplete","pattern","preventDefault","Wellcome","user","status","setStatus","isShow","setIsShow","buttonTitle","setButtonTitle","autoFocus","App","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8pEAsCeA,EApCM,SAAC,GASf,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,aACAC,EAKI,EALJA,MACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,cACAC,EACI,EADJA,MAEA,OACE,sBAAKC,UAAS,gCAA2BN,GAAzC,UACE,uBAAOO,QAASR,EAAUO,UAAU,cAAcE,QAASL,EAA3D,SACGF,GAAS,KAEZ,sBAAKK,UAAU,qBAAf,UACE,qBACEG,GAAIN,EACJI,QAASR,EACTG,KAAMA,EACNI,UAAS,gCAA2BF,EAA3B,YACPN,EAAK,qBAAiBM,EAAjB,UAAyC,MAGlD,uBACEG,QAASR,EACTO,UAAU,mCACVE,QAASL,EAHX,SAKGE,W,OCIIK,EAjCG,SAAC,GAWZ,IAVLX,EAUI,EAVJA,SACAD,EASI,EATJA,MACAE,EAQI,EARJA,aACAC,EAOI,EAPJA,MACAE,EAMI,EANJA,MACAC,EAKI,EALJA,cACAO,EAII,EAJJA,OACAC,EAGI,EAHJA,kBACAV,EAEI,EAFJA,KACGW,EACC,uHACJ,OACE,sBAAKP,UAAS,gCAA2BN,GAAzC,UACE,uBAAOM,UAAU,cAAcE,QAASL,EAAxC,SACGF,GAAS,4DAEZ,mCACEH,MAAOA,GAAS,GAChBC,SAAUA,EACVU,GAAIN,EACJD,KAAMA,EACNI,UAAS,gCAA2BF,IAChCS,IAEN,mBAAGP,UAAU,oBAAb,SAAkCK,GAAU,KAC5C,sBAAML,UAAU,8CAAhB,SACGM,QCgBME,EA3CI,SAAC,GAUb,IATLhB,EASI,EATJA,MACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,MACAE,EAKI,EALJA,MACAC,EAII,EAJJA,cACAW,EAGI,EAHJA,WACAJ,EAEI,EAFJA,OACGE,EACC,yGAIJ,OACE,sBAAKP,UAAS,gCAA2BN,GAAzC,UACE,uBAAOM,UAAU,cAAcE,QAASL,EAAxC,SACGF,GAAS,2DAEZ,qBAAKK,UAAU,uBAAf,SACE,gDACER,MAAOA,EACPC,SAXa,SAACiB,GACpBjB,EAASiB,IAWHP,GAAIN,EACJG,UAAS,qBAAgBF,IACrBS,GALN,aAOGE,EACCA,EAAWE,KAAI,SAACC,EAAMC,GAAP,OACb,wBAAoBrB,MAAOoB,EAAKE,KAAhC,SACGF,EAAKE,MADKD,MAKf,iCAAS,0DAIf,mBAAGb,UAAU,oBAAb,SAAkCK,GAAU,S,OCtC5CU,EAAYC,EACfC,QAAO,SAACH,GAAD,OAAUA,EAAKI,WAAa,OACnCC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEH,WAAaE,EAAEF,cAChCI,OAAO,EAAG,GAEPC,EAAQP,EAAKC,QACjB,SAACH,GAAD,OACGA,EAAKI,WAAa,IAClBJ,EAAKI,aAAeH,EAAU,GAAGG,WAAa,MAEnDK,EAAMC,QAAQT,EAAU,IAETQ,QCeAE,G,MA3BA,SAAC,GAOT,IANLxB,EAMI,EANJA,QACAyB,EAKI,EALJA,KACAC,EAII,EAJJA,SACA7B,EAGI,EAHJA,cACA8B,EAEI,EAFJA,UAEI,IADJC,iBACI,SAIJ,OACE,wBACE5B,QALgB,SAACS,GACnBT,EAAQS,IAKNgB,KAAMA,EACNI,aAAYH,EACZ3B,UAAS,iBAAYF,EAAZ,YACP+B,EAAY,GAAK/B,EAAgB,aAEnCiC,cAAaH,EACbI,UAAWH,EARb,SAUGF,MCwIQM,G,MAxJF,WAAO,IAAD,EACOC,mBAASC,EAAS,GAAGrB,MAD5B,mBACVA,EADU,KACJsB,EADI,OAESF,oBAAS,GAFlB,mBAEVG,EAFU,KAEHC,EAFG,OAIWJ,mBAAS,IAJpB,mBAIVK,EAJU,KAIFC,EAJE,OAKWN,mBAAS,IALpB,mBAKVO,EALU,KAKFC,EALE,OAMaR,oBAAS,GANtB,mBAMVS,EANU,KAMDC,EANC,KAQXC,EAAOC,mBAEbC,qBAAU,WACR,IAAMC,EAAQT,EAAOU,WAAaV,EAAOW,eACzCN,EAAWC,EAAKM,QAAQC,iBAAmBJ,KAC1C,CAACT,IAEJ,IAAMc,EAAoB,SAAC3C,GACzB,IAAM4C,EAAS5C,EAAE4C,OACT1D,EAAgB0D,EAAhB1D,KAAMJ,EAAU8D,EAAV9D,MACdgD,EAAU,2BAAKD,GAAN,kBAAe3C,EAAOJ,KAC/BkD,EAAU,2BACLD,GADI,kBAEN7C,EAAO2D,EAAU/D,EAAOI,EAAM0D,OAI7BC,EAAY,SAAC/D,EAAOI,EAAM0D,GAC9B,MAAa,aAAT1D,GAAwB0D,EAAOE,SAASC,MAE/B,cAAT7D,GAAyB0D,EAAOE,SAASC,MAEhC,mBAAT7D,GAA6BJ,IAAU+C,EAAOU,SACzC,gHADT,EADS,0DAFA,qKAqBLS,EAAmB,WACvBtB,EAAQD,EAAS,GAAGrB,MACpBwB,GAAS,GACTE,EAAU,KAGNmB,EAAS,WAAO,IACZC,EAAwBrB,EAAxBqB,UAAWX,EAAaV,EAAbU,SACnBY,QAAQC,IACNC,KAAKC,UAAU,CAAElD,OAAMmC,WAAUW,YAAWvB,SAAS,KAAM,QAI/D,OACE,uBAAM4B,IAAKpB,EAAM7C,UAAU,uBAA3B,UACE,0BAAUA,UAAU,0CAApB,SACE,cAAC,EAAD,CACER,MAAOsB,EACPrB,SAhCmB,SAACiB,GAC1B0B,EAAQ1B,EAAE4C,OAAO9D,QAgCXE,aAAa,kCACbC,MAAM,oDACNC,KAAK,WACLC,MAAM,YACNC,cAAc,kBACdW,WAAY0B,EACZ+B,UAAQ,MAIZ,2BAAUlE,UAAU,8CAApB,UACE,cAAC,EAAD,CACER,MAAO+C,EAAOU,SACdxD,SAAU4D,EACV3D,aAAa,sCACbC,MAAM,uCACNC,KAAK,WACLC,MAAM,WACNC,cAAc,WACd4B,KAAK,WACLrB,OAAO,qRACP8D,UAAU,IACVC,UAAU,KACVC,aAAa,MACb/D,kBAAmBmC,EAAOQ,SAC1BiB,UAAQ,IAEV,cAAC,EAAD,CACE1E,MAAO+C,EAAOW,eACdzD,SAAU4D,EACV3D,aAAa,sCACbC,MAAM,6EACNC,KAAK,iBACLC,MAAM,kBACNC,cAAc,WACd4B,KAAK,WACLrB,OAAO,wXACP8D,UAAU,IACVC,UAAU,KACV9D,kBAAmBmC,EAAOS,eAC1BmB,aAAa,MACbH,UAAQ,OAIZ,2BAAUlE,UAAU,2CAApB,UACE,cAAC,EAAD,CACER,MAAO+C,EAAOqB,UACdnE,SAAU4D,EACV3D,aAAa,mCACbC,MAAM,oGACNC,KAAK,YACLC,MAAM,aACNC,cAAc,QACd4B,KAAK,QACLpB,kBAAmBmC,EAAOmB,UAC1BvD,OAAO,gQACPiE,QAAQ,4CACRJ,UAAQ,IAGV,cAAC,EAAD,CACE1E,MAAO6C,EACP5C,SA5FkB,WACxB6C,GAAUD,IA4FJ3C,aAAa,yCACbC,MAAM,0DACNC,KAAK,gBACLC,MAAM,iBACNC,cAAc,YACdC,MAAM,oOAGV,cAAC,EAAD,CACEE,QAlGc,SAACS,GACnBA,EAAE6D,iBACFZ,IACAD,KAgGIhC,KAAM,SACN5B,cAAc,eACd8B,UAAU,wFACVC,UAAWc,EALb,mEC9FS6B,G,MAjDE,SAAC,GAA6B,IAA3B1E,EAA0B,EAA1BA,cAAe2E,EAAW,EAAXA,KAAW,EAChBvC,mBAAS,6LADO,mBACrCwC,EADqC,KAC7BC,EAD6B,OAEhBzC,oBAAS,GAFO,mBAErC0C,EAFqC,KAE7BC,EAF6B,OAGN3C,mBAAS,mFAHH,mBAGrC4C,EAHqC,KAGxBC,EAHwB,KAc5C,OACE,sBAAK/E,UAAS,UAAKF,EAAL,aAAd,UACE,qBAAIE,UAAU,uBAAd,uFACgB,sBAAMA,UAAU,yBAAhB,SAA0CyE,OAE1D,cAAC,EAAD,CACExE,QAfc,SAACS,GACnBmE,GAAWD,GACXG,EAAeH,EAAS,wFAAoB,2DAcxC5C,SAAS,QACTlC,cAAc,mBAHhB,SAKGgF,IAEH,sBAAK9E,UAAU,mBAAf,UACG4E,EACC,uBACEI,WAAS,EACTZ,UAAU,MACV5E,MAAOkF,EACPjF,SAtBW,SAACiB,GACpBiE,EAAUjE,EAAE4C,OAAO9D,QAsBXI,KAAK,SACL8B,KAAK,OACL1B,UAAS,sDACP4E,EAAS,GAAK,2CAIlB,oBAAG5E,UAAU,wBAAb,cAAuC0E,GAAU,6DAGnD,qBAAK1E,UAAU,oCC3BRiF,MAhBf,WACE,OACE,sBAAKjF,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,cAAC,EAAD,CACEF,cAAc,kBACd2E,KAAI,2DAAcS,KAAKC,MAAsB,IAAhBD,KAAKE,eAGtC,sBAAMpF,UAAU,OAAhB,SACE,cAAC,EAAD,UCFOqF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f040dc67.chunk.js","sourcesContent":["import React from 'react';\n\nconst FormCheckBox = ({\n  value,\n  onChange,\n  formSelector,\n  title,\n  name,\n  label,\n  classSelector,\n  about,\n}) => {\n  return (\n    <div className={`form__input-container ${formSelector}`}>\n      <label onClick={onChange} className=\"form__label\" htmlFor={label}>\n        {title || ''}\n      </label>\n      <div className=\"form__item-wrapper\">\n        <div\n          id={label}\n          onClick={onChange}\n          name={name}\n          className={`form__item form__item_${classSelector} ${\n            value ? `form__item_${classSelector}_check` : ''\n          }`}\n        ></div>\n        <label\n          onClick={onChange}\n          className=\"form__label form__checkbox-about\"\n          htmlFor={label}\n        >\n          {about}\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default FormCheckBox;\n","import React from 'react';\n\nconst FormInput = ({\n  onChange,\n  value,\n  formSelector,\n  title,\n  label,\n  classSelector,\n  prompt,\n  validationMessage,\n  name,\n  ...rest\n}) => {\n  return (\n    <div className={`form__input-container ${formSelector}`}>\n      <label className=\"form__label\" htmlFor={label}>\n        {title || 'Заголовок '}\n      </label>\n      <input\n        value={value || ''}\n        onChange={onChange}\n        id={label}\n        name={name}\n        className={`form__item form__item_${classSelector}`}\n        {...rest}\n      ></input>\n      <p className=\"form__item-prompt\">{prompt || ''}</p>\n      <span className=\"form__input-error form__input-error_visible\">\n        {validationMessage}\n      </span>\n    </div>\n  );\n};\n\nexport default FormInput;\n","import React from 'react';\n\nconst FormSelect = ({\n  value,\n  onChange,\n  formSelector,\n  title,\n  label,\n  classSelector,\n  selectList,\n  prompt,\n  ...rest\n}) => {\n  const handleChange = (e) => {\n    onChange(e);\n  };\n  return (\n    <div className={`form__input-container ${formSelector}`}>\n      <label className=\"form__label\" htmlFor={label}>\n        {title || 'Заголовок'}\n      </label>\n      <div className=\"form__select-wrapper\">\n        <select\n          value={value}\n          onChange={handleChange}\n          id={label}\n          className={`form__item ${classSelector}`}\n          {...rest}\n        >\n          {selectList ? (\n            selectList.map((item, index) => (\n              <option key={index} value={item.city}>\n                {item.city}\n              </option>\n            ))\n          ) : (\n            <option>{'значения'}</option>\n          )}\n        </select>\n      </div>\n      <p className=\"form__item-prompt\">{prompt || ''}</p>\n    </div>\n  );\n};\n\nexport default FormSelect;\n","import data from '../data/cities.json';\n\nconst firstCity = data\n  .filter((city) => city.population > 50000)\n  .sort((a, b) => b.population - a.population)\n  .splice(0, 1);\n\nconst popul = data.filter(\n  (city) =>\n    (city.population > 50000) &\n    (city.population !== firstCity[0].population + '')\n);\npopul.unshift(firstCity[0]);\n\nexport default popul;\n","import React from 'react';\nimport './Button.scss';\nconst Button = ({\n  onClick,\n  type,\n  children,\n  classSelector,\n  ariaLabel,\n  isEnabled = true,\n}) => {\n  const handleClick = (e) => {\n    onClick(e);\n  };\n  return (\n    <button\n      onClick={handleClick}\n      type={type}\n      aria-label={children}\n      className={`button ${classSelector} ${\n        isEnabled ? '' : classSelector + '_disabled'\n      }`}\n      arial-label={ariaLabel}\n      disabled={!isEnabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect, useRef } from 'react';\nimport FormCheckBox from './FormCheckBox';\nimport FormInput from './FormInput';\nimport FormSelect from './FormSelect';\nimport cityList from '../utils/cityList';\nimport Button from './Button';\nimport './Form.scss';\n\nconst Form = () => {\n  const [city, setCity] = useState(cityList[0].city);\n  const [check, setCheck] = useState(false);\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsvalid] = useState(false);\n\n  const form = useRef();\n\n  useEffect(() => {\n    const match = values.password === values.passwordRepeat;\n    setIsvalid(form.current.checkValidity() && match);\n  }, [values]);\n\n  const handleChangeInput = (e) => {\n    const target = e.target;\n    const { name, value } = target;\n    setValues({ ...values, [name]: value });\n    setErrors({\n      ...errors,\n      [name]: textError(value, name, target),\n    });\n  };\n\n  const textError = (value, name, target) => {\n    if (name === 'password' && !target.validity.valid)\n      return 'Используйте не менее 5 символов';\n    if (name === 'userEmail' && !target.validity.valid)\n      return 'Неверный E-mail';\n    if (name === 'passwordRepeat' && value !== values.password)\n      return 'Пароли не совпадают';\n  };\n\n  const handleChangeSelect = (e) => {\n    setCity(e.target.value);\n  };\n\n  const handleChangeCheck = () => {\n    setCheck(!check);\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    toJSON();\n    handleResetValue();\n  };\n\n  const handleResetValue = () => {\n    setCity(cityList[0].city);\n    setCheck(false);\n    setValues({});\n  };\n\n  const toJSON = () => {\n    const { userEmail, password } = values;\n    console.log(\n      JSON.stringify({ city, password, userEmail, check }, null, '\\t')\n    );\n  };\n\n  return (\n    <form ref={form} className=\"form form__container\">\n      <fieldset className=\"form__fieldset form__fieldset_ctrl_city\">\n        <FormSelect\n          value={city}\n          onChange={handleChangeSelect}\n          formSelector=\"form__input-container_ctrl_city\"\n          title=\"Ваш город\"\n          name=\"userCity\"\n          label=\"user-city\"\n          classSelector=\"form__item_city\"\n          selectList={cityList}\n          required\n        />\n      </fieldset>\n\n      <fieldset className=\"form__fieldset form__fieldset_ctrl_password\">\n        <FormInput\n          value={values.password}\n          onChange={handleChangeInput}\n          formSelector=\"form__input-container_ctrl_password\"\n          title=\"Пароль\"\n          name=\"password\"\n          label=\"password\"\n          classSelector=\"password\"\n          type=\"password\"\n          prompt=\"Ваш новый пароль должен содержать не менее 5 символов.\"\n          minLength=\"5\"\n          maxLength=\"40\"\n          autoComplete=\"off\"\n          validationMessage={errors.password}\n          required\n        />\n        <FormInput\n          value={values.passwordRepeat}\n          onChange={handleChangeInput}\n          formSelector=\"form__input-container_ctrl_password\"\n          title=\"Пароль еще раз\"\n          name=\"passwordRepeat\"\n          label=\"password-repeat\"\n          classSelector=\"password\"\n          type=\"password\"\n          prompt=\"Повторите пароль, пожалуйста, это обезопасит вас с нами на случай ошибки.\"\n          minLength=\"5\"\n          maxLength=\"40\"\n          validationMessage={errors.passwordRepeat}\n          autoComplete=\"off\"\n          required\n        />\n      </fieldset>\n\n      <fieldset className=\"form__fieldset form__fieldset_ctrl_email\">\n        <FormInput\n          value={values.userEmail}\n          onChange={handleChangeInput}\n          formSelector=\"form__input-container_ctrl_email\"\n          title=\"Электронная почта\"\n          name=\"userEmail\"\n          label=\"user-email\"\n          classSelector=\"email\"\n          type=\"email\"\n          validationMessage={errors.userEmail}\n          prompt=\"Можно изменить адрес, указанный при регистрации.\"\n          pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          required\n        />\n\n        <FormCheckBox\n          value={check}\n          onChange={handleChangeCheck}\n          formSelector=\"form__input-container_ctrl_email-check\"\n          title=\"Я согласен\"\n          name=\"userAgreement\"\n          label=\"user-agreement\"\n          classSelector=\"agreement\"\n          about=\"принимать актуальную информацию на емейл\"\n        />\n      </fieldset>\n      <Button\n        onClick={handleClick}\n        type={'submit'}\n        classSelector=\"form__button\"\n        ariaLabel=\"Изменить данные\"\n        isEnabled={isValid}\n      >\n        Изменить\n      </Button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport Button from './Button';\nimport './Wellcome.scss';\n\nconst Wellcome = ({ classSelector, user }) => {\n  const [status, setStatus] = useState('Прежде чем действовать, надо понять');\n  const [isShow, setIsShow] = useState(false);\n  const [buttonTitle, setButtonTitle] = useState('Сменить статус');\n\n  const handleClick = (e) => {\n    setIsShow(!isShow);\n    setButtonTitle(isShow ? 'Изменить статус' : 'Сохранить');\n  };\n\n  const handleChange = (e) => {\n    setStatus(e.target.value);\n  };\n\n  return (\n    <div className={`${classSelector} wellcome`}>\n      <h1 className=\"wellcome__user-title\">\n        Здравствуйте, <span className=\"wellcome__user-current\">{user}</span>\n      </h1>\n      <Button\n        onClick={handleClick}\n        disabled=\"false\"\n        classSelector=\"wellcome__button\"\n      >\n        {buttonTitle}\n      </Button>\n      <div className=\"wellcome__status\">\n        {isShow ? (\n          <input\n            autoFocus\n            maxLength=\"120\"\n            value={status}\n            onChange={handleChange}\n            name=\"status\"\n            type=\"text\"\n            className={`wellcome__status-input wellcome__status-text${\n              isShow ? '' : 'wellcome__status-input_display_hidden'\n            }`}\n          ></input>\n        ) : (\n          <p className=\"wellcome__status-text\"> {status || 'Ваш статус'}</p>\n        )}\n\n        <div className=\"wellcome__square-status\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Wellcome;\n","import './App.scss';\nimport Form from './Form';\nimport Wellcome from './Wellcome';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <Wellcome\n          classSelector=\"header__wrapper\"\n          user={`Человек №${Math.floor(Math.random() * 1000)}`}\n        />\n      </header>\n      <main className=\"main\">\n        <Form />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}